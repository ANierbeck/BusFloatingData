#cloud-config
"coreos":
  "units":
  - "command": |-
      start
    "content": |
      [Unit]
      Description=AWS Setup: Formats the /var/lib ephemeral drive
      Before=var-lib.mount dbus.service
      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)"
    "name": |-
      format-var-lib-ephemeral.service
  - "command": |-
      start
    "content": |
      [Unit]
      Description=AWS Setup: Mount /var/lib
      Before=dbus.service
      [Mount]
      What=/dev/xvdb
      Where=/var/lib
      Type=ext4
    "name": |-
      var-lib.mount
  - "command": |-
      stop
    "mask": !!bool |-
      true
    "name": |-
      etcd.service
  - "command": |-
      stop
    "mask": !!bool |-
      true
    "name": |-
      update-engine.service
  - "command": |-
      stop
    "mask": !!bool |-
      true
    "name": |-
      locksmithd.service
  - "command": |-
      stop
    "name": |-
      systemd-resolved.service
  - "command": |-
      restart
    "name": |-
      systemd-journald.service
  - "command": |-
      restart
    "name": |-
      docker.service
  - "command": |-
      start
    "content": |
      [Unit]
      Before=dcos.target
      [Service]
      Type=oneshot
      StandardOutput=journal+console
      StandardError=journal+console
      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d
      ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh
    "name": |-
      dcos-link-env.service
  - "content": |
      [Unit]
      Description=Pkgpanda: Download DC/OS to this host.
      After=network-online.target
      Wants=network-online.target
      ConditionPathExists=!/opt/mesosphere/
      [Service]
      EnvironmentFile=/etc/mesosphere/setup-flags/bootstrap-id
      Type=oneshot
      StandardOutput=journal+console
      StandardError=journal+console
      ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz ${dcos_base_download_url}/bootstrap/$${BOOTSTRAP_ID}.bootstrap.tar.xz
      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere
      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere
      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz
    "name": |-
      dcos-download.service
  - "command": |-
      start
    "content": |
      [Unit]
      Description=Pkgpanda: Specialize DC/OS for this host.
      Requires=dcos-download.service
      After=dcos-download.service
      [Service]
      Type=oneshot
      StandardOutput=journal+console
      StandardError=journal+console
      EnvironmentFile=/opt/mesosphere/environment
      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd
      [Install]
      WantedBy=multi-user.target
    "enable": !!bool |-
      true
    "name": |-
      dcos-setup.service
  "update":
    "reboot-strategy": |-
      off
"write_files":
- "content": |
    ${dcos_base_download_url}
  "owner": |-
    root
  "path": |-
    /etc/mesosphere/setup-flags/repository-url
  "permissions": |-
    0644
- "content": |
    BOOTSTRAP_ID=${bootstrap_id}
  "owner": |-
    root
  "path": |-
    /etc/mesosphere/setup-flags/bootstrap-id
  "permissions": |-
    0644
- "content": |
${cluster_packages}
  "owner": |-
    root
  "path": |-
    /etc/mesosphere/setup-flags/cluster-packages.json
  "permissions": |-
    0644
- "content": |
    [Journal]
    MaxLevelConsole=warning
  "owner": |-
    root
  "path": |-
    /etc/systemd/journald.conf.d/dcos.conf
  "permissions": |-
    0644
- "content": |
    rexray:
      loglevel: info
      modules:
        default-admin:
          host: tcp://127.0.0.1:61003
      storageDrivers:
      - ec2
      volume:
        unmount:
          ignoreusedcount: true
  "path": |-
    /etc/rexray/config.yml
  "permissions": |-
    0644
- "content": |
    MESOS_CLUSTER=${stack_name}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider
- "content": |
    ADMINROUTER_ACTIVATE_AUTH_MODULE=${authentication_enabled}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/adminrouter.env
- "content": |
    com.netflix.exhibitor.s3.access-key-id=${aws_access_key_id}
    com.netflix.exhibitor.s3.access-secret-key=${aws_secret_access_key}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor.properties
- "content": |
    MASTER_SOURCE=exhibitor_uri
    EXHIBITOR_URI=http://${internal_master_lb_dns_name}:8181/exhibitor/v1/cluster/status
    EXHIBITOR_ADDRESS=${internal_master_lb_dns_name}
    RESOLVERS=${fallback_dns}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config
- "content": |
    EXHIBITOR_BACKEND=AWS_S3
    AWS_REGION=${aws_region}
    AWS_S3_BUCKET=${exhibitor_s3_bucket}
    AWS_S3_PREFIX=${stack_name}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor
- "content": |
    {"uiConfiguration":{"plugins":{"banner":{"enabled":false,"backgroundColor":"#1E232F","foregroundColor":"#FFFFFF","headerTitle":null,"headerContent":null,"footerContent":null,"imagePath":null,"dismissible":null},"branding":{"enabled":false},"external-links": {"enabled": false},

    "authentication":{"enabled":false},

    "oauth":{"enabled":${authentication_enabled},"authHost":"https://dcos.auth0.com"},


    "tracking":{"enabled":true}}}}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/ui-config.json
- "content": |
    INTERNAL_MASTER_LB_DNSNAME=${internal_master_lb_dns_name}
    MASTER_LB_DNSNAME=${public_lb_dns_name}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/aws_dnsnames
- "content": |-
    {}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json
- "content": ""
  "path": |-
    /etc/mesosphere/roles/master
- "content": ""
  "path": |-
    /etc/mesosphere/roles/aws_master
- "content": ""
  "path": |-
    /etc/mesosphere/roles/aws
