#cloud-config
"coreos":
  "units":
  - "command": |-
      stop
    "mask": !!bool |-
      true
    "name": |-
      etcd.service
  - "command": |-
      stop
    "mask": !!bool |-
      true
    "name": |-
      update-engine.service
  - "command": |-
      stop
    "mask": !!bool |-
      true
    "name": |-
      locksmithd.service
  - "command": |-
      stop
    "name": |-
      systemd-resolved.service
  - "command": |-
      start
    "content": |
      [Unit]
      Description=Formats the /var/lib ephemeral drive
      Before=var-lib.mount dbus.service
      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)"
    "name": |-
      format-var-lib-ephemeral.service
  - "command": |-
      start
    "content": |
      [Unit]
      Description=Mount /var/lib
      Before=dbus.service
      [Mount]
      What=/dev/xvdb
      Where=/var/lib
      Type=ext4
    "name": |-
      var-lib.mount
  - "command": |-
      restart
    "name": |-
      systemd-journald.service
  - "command": |-
      restart
    "name": |-
      docker.service
  - "command": |-
      start
    "content": |
      [Unit]
      Before=dcos.target
      [Service]
      Type=oneshot
      StandardOutput=journal+console
      StandardError=journal+console
      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d
      ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh
    "name": |-
      dcos-link-env.service
  - "content": |
      [Unit]
      Description=Download the DCOS
      After=network-online.target
      Wants=network-online.target
      ConditionPathExists=!/opt/mesosphere/
      [Service]
      EnvironmentFile=/etc/mesosphere/setup-flags/bootstrap-id
      Type=oneshot
      StandardOutput=journal+console
      StandardError=journal+console
      ExecStartPre=/usr/bin/curl --fail --retry 20 --continue-at - --location --silent --show-error --verbose --output /tmp/bootstrap.tar.xz https://downloads.mesosphere.com/dcos/stable/bootstrap/de1aa673de0d01623623b327d3d405da3bf7fa10.bootstrap.tar.xz
      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere
      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere
      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz
    "name": |-
      dcos-download.service
  - "command": |-
      start
    "content": |
      [Unit]
      Description=Prep the Pkgpanda working directories for this host.
      Requires=dcos-download.service
      After=dcos-download.service
      [Service]
      Type=oneshot
      StandardOutput=journal+console
      StandardError=journal+console
      EnvironmentFile=/opt/mesosphere/environment
      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd
      [Install]
      WantedBy=multi-user.target
    "enable": !!bool |-
      true
    "name": |-
      dcos-setup.service
  "update":
    "reboot-strategy": |-
      off
"write_files":
- "content": |
    https://downloads.mesosphere.com/dcos/stable
  "owner": |-
    root
  "path": |-
    /etc/mesosphere/setup-flags/repository-url
  "permissions": |-
    0644
- "content": |
    BOOTSTRAP_ID=de1aa673de0d01623623b327d3d405da3bf7fa10
  "owner": |-
    root
  "path": |-
    /etc/mesosphere/setup-flags/bootstrap-id
  "permissions": |-
    0644
- "content": |
    ["dcos-config--setup_8e9ec1cd82a70aadda369c67ba1c91dd76de1542", "dcos-detect-ip--setup_8e9ec1cd82a70aadda369c67ba1c91dd76de1542", "dcos-metadata--setup_8e9ec1cd82a70aadda369c67ba1c91dd76de1542"]
  "owner": |-
    root
  "path": |-
    /etc/mesosphere/setup-flags/cluster-packages.json
  "permissions": |-
    0644
- "content": |
    [Journal]
    MaxLevelConsole=warning
  "owner": |-
    root
  "path": |-
    /etc/systemd/journald.conf.d/dcos.conf
  "permissions": |-
    0644
- "content": |
    MESOS_CLUSTER=${stack_name}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider
- "content": |
    EXHIBITOR_BACKEND=AWS_S3
    AWS_REGION=${aws_region}
    AWS_S3_BUCKET=${exhibitor_s3_bucket}
    AWS_S3_PREFIX=${stack_name}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor
- "content": |
    com.netflix.exhibitor.s3.access-key-id=${aws_access_key_id}
    com.netflix.exhibitor.s3.access-secret-key=${aws_secret_access_key}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor.properties
- "content": |
    MASTER_SOURCE=exhibitor
    EXHIBITOR_ADDRESS=${internal_master_lb_dns_name}
    RESOLVERS=${fallback_dns}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config
- "content": |-
    {}
  "path": |-
    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json
- "content": ""
  "path": |-
    /etc/mesosphere/roles/slave
- "content": ""
  "path": |-
    /etc/mesosphere/roles/aws
